rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSessionMember(sessionId) {
      return request.auth != null &&
        exists(/databases/$(database)/documents/players/$(sessionId + "_" + request.auth.uid));
    }

    match /sessions/{sessionId} {
      allow read: if isSessionMember(sessionId);
      allow write: if false;
      allow create: if request.auth != null;
      allow update: if request.auth != null && request.resource.data.ownerId == request.auth.uid;
    }

    match /players/{playerId} {
      allow read: if isSessionMember(resource.data.sessionId);
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update: if false;
    }

    match /messages/{messageId} {
      allow read: if isSessionMember(resource.data.sessionId);
      allow create: if request.auth != null &&
        request.resource.data.sessionId is string &&
        isSessionMember(request.resource.data.sessionId);
      allow update, delete: if false;
    }

    match /storyStates/{sessionId} {
      allow read: if isSessionMember(sessionId);
      allow write: if false;
    }
  }
}
